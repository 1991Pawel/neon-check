// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id           String   @id @default(cuid())
  email        String?
  passwordHash String?
  member       Member?
  role         String   @default("USER")

}

model Member {
id                String    @id @default(cuid())
  userId            String    @unique
  name              String
  photos            Photo[]
    location  Location[]
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    senderMessages    Message[] @relation("sender")
  recipientMessages Message[] @relation("recipient")

}


model Photo {
  id        String  @id @default(cuid())
  publicId  String?
  url       String
  memberId  String
  member    Member  @relation(fields: [memberId], references: [id], onDelete: Cascade)
  isMain    Boolean @default(false)
}
model Location {
  id        String  @id @default(cuid())
  memberId  String
  address   String 
  latitude  Float  
  longitude Float  
  member    Member  @relation(fields: [memberId], references: [id], onDelete: Cascade)
}


model Message {
  id               String    @id @default(cuid())
  text             String
  created          DateTime  @default(now())
  senderId         String?
  recipientId      String?
  sender           Member?   @relation("sender", fields: [senderId], references: [userId], onDelete: SetNull)
  recipient        Member?   @relation("recipient", fields: [recipientId], references: [userId], onDelete: SetNull)
  dateRead         DateTime?
  senderDeleted    Boolean   @default(false)
  recipientDeleted Boolean   @default(false)
}